(this.webpackJsonp=this.webpackJsonp||[]).push([["novalnet-payment"],{"54QO":function(t){t.exports=JSON.parse('{"noval-payment":{"module":{"title":"Novalnet","description":"PCI-konforme und lückenlose Integration mit verschiedenen Zahlungsarten und Zahlungsdienstleistungen auf einer Plattform.","txid":"Novalnet Transaktions-ID","comments":"Novalnet Kommentare"},"settingForm":{"title":"Novalnet-Einstellungen","buttons":{"save":"Einstellungen speichern","validate":"API-Anmeldeinformationen validieren"},"credentials":{"cardTitle":"Novalnet Haupteinstellungen","activationKey":{"label":"Aktivierungsschlüssel des Produkts","tooltipText":"Novalnet-Aktivierungsschlüssel für das Produkt eingeben. Um diesen Aktivierungschlüssel für das Produkt zu erhalten, gehen Sie zum Novalnet-Admin-Portal - Projekte: Informationen zum jeweiligen Projekt - Parameter Ihres Shops: API Signature (Aktivierungsschlüssel des Produkts)."},"vendorId":"Händler-ID","authCode":"Authentifizierungscode","productId":"Projekt-ID","accessKey":"Zahlungs-Zugriffsschlüssel","tariff":{"label":"Tarif-ID","tooltipText":"Novalnet-Tarif-ID auswählen.","emptyText":"Tarif-ID auswählen"},"gatewayTimeout":{"label":"Zeitlimit der Schnittstelle (in Sekunden)","tooltipText":"Falls die Verarbeitungszeit der Bestellung das Zeitlimit der Schnittstelle überschreitet, wird die Bestellung nicht ausgeführt."},"paymentLogo":{"label":"Logo der Zahlungsart anzeigen","tooltipText":"Das Logo der Zahlungsart wird auf der Checkout-Seite angezeigt."}},"merchantSettings":{"cardTitle":"Verwaltung des Händlerskripts","callbackMail":"Email-Benachrichtigung für Callback aktivieren","deactivateIp":{"label":"Deaktivieren Sie die IP-Adresskontrolle (nur zu Testzwecken)","tooltipText":"Diese Option ermöglicht eine manuelle Ausführung. Bitte deaktivieren Sie diese Option, bevor Sie Ihren Shop in den LIVE-Modus schalten, um nicht autorisierte Zugriffe von externen Parteien (außer von Novalnet) zu vermeiden."},"mailTo":{"label":"Emailadresse (An)","tooltipText":"Emailadresse des Empfängers"},"mailBcc":{"label":"Emailadresse (Bcc)","tooltipText":"Emailadresse des Empfängers für Bcc"},"callbackUrl":{"label":"URL für Benachrichtigungen","tooltipText":"Der URL für Benachrichtigungen dient dazu, Ihre Datenbank / Ihr System auf einem aktuellen Stand zu halten und den Novalnet-Transaktionsstatus abzugleichen."}},"paymentSettings":{"testmode":{"label":"Testmodus aktivieren","tooltipText":"Die Zahlung wird im Testmodus durchgeführt, daher wird der Betrag für diese Transaktion nicht eingezogen."},"onHold":{"label":"Bearbeitungsmaßnahme","capture":"Zahlung einziehen","authroize":"Zahlung autorisieren","amountLabel":"Mindesttransaktionsbetrag für die Autorisierung (in der kleinsten Währungseinheit, z.B. 100 Cent = entsprechen 1.00 EUR)","tooltipText":"Übersteigt der Bestellbetrag das genannte Limit, wird die Transaktion, bis zu ihrer Bestätigung durch Sie, auf on hold gesetzt. Sie können das Feld leer lassen, wenn Sie möchten, dass alle Transaktionen als on hold behandelt werden."},"guarantee":{"label":"Zahlungsgarantie aktivieren","tooltipText":"Grundanforderungen für die Zahlungsgarantie<br /><br />Zugelassene Staaten: AT, DE, CH<br />Zugelassene Währung: EUR<br />Mindestbetrag der Bestellung >= 9,99 EUR<br />Mindestalter des Endkunden >= 18 Jahre<br />Rechnungsadresse und Lieferadresse müssen übereinstimmen<br />Geschenkgutscheine / Coupons sind nicht erlaubt"},"guaranteeMinimumOrderAmount":{"label":"Mindestbestellbetrag (in der kleinsten Währungseinheit, z.B. 100 Cent = entsprechen 1.00 EUR)","tooltipText":"Diese Einstellung überschreibt die Standardeinstellung für den Mindest-Bestellbetrag. Anmerkung: der Mindest-Bestellbetrag sollte größer oder gleich 9,99 EUR sein."},"forceGuarantee":{"label":"Zahlung ohne Zahlungsgarantie erzwingen","tooltipText":"Falls die Zahlungsgarantie aktiviert ist (wahr), die oben genannten Anforderungen jedoch nicht erfüllt werden, soll die Zahlung ohne Zahlungsgarantie verarbeitet werden."},"creditcard":{"cardTitle":"Kreditkarte Konfiguration","cc3D":{"label":"3D-Secure aktivieren","tooltipText":"3D-Secure wird für Kreditkarten aktiviert. Die kartenausgebende Bank fragt vom Käufer ein Passwort ab, welches helfen soll, betrügerische Zahlungen zu verhindern. Dies kann von der kartenausgebenden Bank als Beweis verwendet werden, dass der Käufer tatsächlich der Inhaber der Kreditkarte ist. Damit soll das Risiko von Chargebacks verringert werden."},"forcecc3D":{"label":"3D-Secure-Zahlungen unter vorgegebenen Bedingungen durchführen","tooltipText":"Wenn 3D-Secure in dem darüberliegenden Feld nicht aktiviert ist, sollen 3D-Secure-Zahlungen nach den Einstellungen zum Modul im Novalnet-Admin-Portal unter \'3D-Secure-Zahlungen durchführen (gemäß vordefinierten Filtern und Einstellungen)\' durchgeführt werden. Wenn die vordefinierten Filter und Einstellungen des Moduls \'3D-Secure durchführen\' zutreffen, wird die Transaktion als 3D-Secure-Transaktion durchgeführt, ansonsten als Nicht-3D-Secure-Transaktion. Beachten Sie bitte, dass das Modul \'3D-Secure-Zahlungen durchführen (gemäß vordefinierten Filtern und Einstellungen)\' im Novalnet-Admin-Portal konfiguriert sein muss, bevor es hier aktiviert wird. Für weitere Informationen sehen Sie sich bitte die Beschreibung dieses Betrugsprüfungsmoduls an (unter dem Reiter \'Betrugsprüfungsmodule\' unterhalb des Menüpunkts \'Projekte\' für das ausgewähte Projekt im Novalnet-Admin-Portal) oder kontaktieren Sie das Novalnet-Support-Team."},"css":{"cardTitle":"CSS-Einstellungen für den iFrame mit Kreditkartendaten","label":"Beschriftung","input":"Eingabe","css":"Text für das CSS"}},"sepa":{"cardTitle":"Lastschrift SEPA Konfiguration","dueDate":{"label":"Abstand (in Tagen) bis zum SEPA-Einzugsdatum","tooltipText":"Geben Sie die Anzahl der Tage ein, nach denen die Zahlung vorgenommen werden soll (muss zwischen 2 und 14 Tagen liegen).","error":"SEPA Fälligkeitsdatum Ungültiger"}},"paypal":{"cardTitle":"PayPal Konfiguration"},"sofort":{"cardTitle":"Sofortüberweisung Konfiguration"},"ideal":{"cardTitle":"iDEAL Configuration"},"eps":{"cardTitle":"eps Konfiguration"},"giropay":{"cardTitle":"Giropay Konfiguration"},"cashpayment":{"cardTitle":"Barzahlen Konfiguration","dueDate":{"label":"Verfallsdatum des Zahlscheins (in Tagen)","tooltipText":"Geben Sie die Anzahl der Tage ein, um den Betrag in einer Barzahlen-Partnerfiliale in Ihrer Nähe zu bezahlen. Wenn das Feld leer ist, werden standardmäßig 14 Tage als Fälligkeitsdatum gesetzt."}},"invoice":{"cardTitle":"Kauf auf Rechnung Konfiguration","dueDate":{"label":"Fälligkeitsdatum (in Tagen)","tooltipText":"Geben Sie die Anzahl der Tage ein, binnen derer die Zahlung bei Novalnet eingehen soll (muss größer als 7 Tage sein). Falls dieses Feld leer ist, werden 14 Tage als Standard-Zahlungsfrist gesetzt."}},"prepayment":{"cardTitle":"Vorauskasse Konfiguration"},"przelewy24":{"cardTitle":"Przelewy24 Konfiguration"}},"behaviour":{"cardTitle":"Behaviour","merchantLocation":{"label":"Merchant location","germany":"Germany","other":"Other merchant location"},"intent":{"label":"Payment acquisition","sale":"Complete payment immediately (Sale)","authorize":"Delayed payment collection (Auth-Capture)","order":"Delayed payment collection (Order-Auth-Capture)"},"submitCart":{"label":"Submit cart","helpText":"If this option is active, cart data will be submitted to PayPal at checkout."},"brandName":{"label":"Your own brand name on PayPal page","tooltipText":"This text will be displayed as the brand name on the PayPal payment page."},"landingPage":{"label":"PayPal landing page","helpText":{"Login":"Login: The PayPal site displays a login screen as landing page.","Billing":"Registration: The PayPal site displays a registration form as landing page."},"options":{"Login":"Login","Billing":"Registration"}},"sendOrderNumber":{"label":"Submit order number","helpText":"If this option is active, the order number will be submitted to PayPal at checkout."},"orderNumberPrefix":{"label":"Order number prefix","tooltipText":"This text is placed before the original order number (e.g MyShop_SW20001). This helps to identify the shop where the payment was made."}},"titleSuccess":"Success","titleError":"Error","successMessage":"Die Novalnet-Händlerdaten wurden erfolgreich eingestellt.","errorMessage":"Ein Fehler trat auf und Ihre Zahlung konnte nicht abgeschlossen werden.","emptyMessage":"Aktivierungsschlüssel für das Produkt eingeben"}}}')},Cb2X:function(t,e,n){"use strict";n.r(e);var a=n("NeA9"),l=n.n(a);const{Component:i}=Shopware;i.override("sw-settings-index",{template:l.a});var s=n("GL6C"),o=n.n(s);n("xf3Y");const{Component:r,Context:c}=Shopware,{Criteria:p}=Shopware.Data;r.override("sw-order-detail-base",{template:o.a,data:()=>({disableButtons:!1,novalnetComments:"",isVerified:!1,isNovalnetPayment:!1}),watch:{orderId:{deep:!0,handler(){if(!this.orderId)return void this.setNovalnetPayment(null);if(this.isVerified)return;this.getOrderRepository().get(this.orderId,c.api,this.transactionCriteria()).then(t=>{if(this.isVerified=!0,t.hasOwnProperty("transactions")&&t.transactions){let e=!1,n="",a=this.$tc("noval-payment.module.comments");t.transactions.map((function(t){t.hasOwnProperty("customFields")&&t.customFields.hasOwnProperty("novalnet_comments")&&t.customFields.novalnet_comments&&(e=!0,""!=n&&(n+="<dt>"+a+"</dt>"),n+=t.customFields.novalnet_comments.split("/ ").join("<br />"))})),e&&(this.novalnetComments=n,this.setNovalnetPayment(!0))}else this.setNovalnetPayment(null)})},immediate:!0}},methods:{setNovalnetPayment(t){t&&(this.isNovalnetPayment=t)},getOrderRepository(){return this.repositoryFactory.create("order")},transactionCriteria(){const t=new p;return t.addAssociation("transactions"),t}}});var d=n("PvHz"),m=n.n(d);n("XhVM");const{Component:u,Mixin:g}=Shopware,{Criteria:h}=Shopware.Data;u.register("noval-payment-settings",{template:m.a,mixins:[g.getByName("notification"),g.getByName("sw-inline-snippet")],inject:["repositoryFactory","NovalPaymentApiCredentialsService"],data:()=>({isLoading:!1,isValidating:!1,isSaveSuccessful:!1,isValidateSuccessful:!1,clientIdFilled:!1,clientSecretFilled:!1,config:{}}),computed:{validateButtonDisabled(){return this.isLoading||this.isValidating}},watch:{config:{handler(){const t=this.$refs.configComponent.allConfigs.null;null===this.$refs.configComponent.selectedSalesChannelId?this.clientIdFilled=!!this.config["NovalnetPayment.settings.clientId"]:(this.clientIdFilled=!!this.config["NovalnetPayment.settings.clientId"]||!!t["NovalnetPayment.settings.clientId"],this.clientSecretFilled=!!this.config["NovalnetPayment.settings.clientSecret"])},deep:!0}},methods:{onSave(){""!=this.config["NovalnetPayment.settings.sepa.dueDate"]&&(this.config["NovalnetPayment.settings.sepa.dueDate"]<2||this.config["NovalnetPayment.settings.sepa.dueDate"]>14)?this.createNotificationError({title:this.$tc("noval-payment.settingForm.titleError"),message:this.$tc("noval-payment.settingForm.paymentSettings.sepa.dueDate.error")}):(this.isSaveSuccessful=!1,this.isLoading=!0,this.checkBackendConfiguration(),this.$refs.configComponent.save().then(t=>{this.isLoading=!1,this.isSaveSuccessful=!0,t&&(this.config=t)}).catch(()=>{this.isLoading=!1}))},getConfigValue(t){const e=this.$refs.configComponent.allConfigs.null;return null===this.$refs.configComponent.selectedSalesChannelId?this.config["NovalnetPayment.settings."+t]:this.config["NovalnetPayment.settings."+t]||e["NovalnetPayment.settings."+t]},checkBackendConfiguration(){const t=this.getConfigValue("clientId");null!=t&&""!=t?this.NovalPaymentApiCredentialsService.validateApiCredentials(t).then(t=>{if(null==t.serverResponse||""==t.serverResponse)return void this.createNotificationError({title:this.$tc("noval-payment.settingForm.titleError"),message:this.$tc("noval-payment.settingForm.emptyMessage")});return 100!=t.serverResponse.status?void this.createNotificationError({title:this.$tc("noval-payment.settingForm.titleError"),message:t.serverResponse.config_result}):(t.tariffResponse.forEach(t=>{null!=this.config["NovalnetPayment.settings.tariff"]&&""!=this.config["NovalnetPayment.settings.tariff"]||(this.config["NovalnetPayment.settings.tariff"]=t.id)}),this.config["NovalnetPayment.settings.vendorId"]=t.serverResponse.vendor,this.config["NovalnetPayment.settings.authCode"]=t.serverResponse.auth_code,this.config["NovalnetPayment.settings.productId"]=t.serverResponse.product,this.config["NovalnetPayment.settings.accessKey"]=t.serverResponse.access_key,this.$refs.configComponent.save().then(t=>{this.isLoading=!1,this.isSaveSuccessful=!0,t&&(this.config=t)}).catch(()=>{this.isLoading=!1}),this.createNotificationSuccess({title:this.$tc("noval-payment.settingForm.titleSuccess"),message:this.$tc("noval-payment.settingForm.successMessage")}),void setTimeout(this.$router.go,3e3))}).catch(t=>{this.createNotificationError({title:this.$tc("noval-payment.settingForm.titleError"),message:this.$tc("noval-payment.settingForm.errorMessage")}),this.isTesting=!1,this.isTestSuccessful=!1}):this.createNotificationError({title:this.$tc("noval-payment.settingForm.titleError"),message:this.$tc("noval-payment.settingForm.emptyMessage")})},onValidate(){this.checkBackendConfiguration(),this.isValidating=!1,this.isValidateSuccessful=!0}},metaInfo(){return{title:this.$createTitle()}}});var v=n("qAyE"),y=n.n(v);const{Component:f,Mixin:w}=Shopware,{Criteria:_}=Shopware.Data;f.register("noval-payment-credentials",{template:y.a,mixins:[w.getByName("notification"),w.getByName("sw-inline-snippet")],name:"NovalnetPaymentCredentials",props:{actualConfigData:{type:Object,required:!0},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{required:!0},clientIdFilled:{required:!0},domain:{type:String,required:!1,default:""}},data:()=>({currentUrl:(window.location.protocol+"//"+window.location.host+window.location.pathname).split("/admin").join("")+"/novalnet/callback",tariffOptions:[],allConfigs:{},shouldDisable:!0}),inject:["repositoryFactory","NovalPaymentApiCredentialsService"],watch:{actualConfigData:{handler(t){t&&this.$emit("input",t)},deep:!0}},computed:{actualConfigData:{get(){return this.allConfigs[this.selectedSalesChannelId]},set(t){this.allConfigs={...this.allConfigs,[this.selectedSalesChannelId]:t}}}},created(){this.createdComponent()},methods:{checkTextFieldInheritance:t=>"string"!=typeof t||t.length<=0,checkBoolFieldInheritance:t=>"boolean"!=typeof t,checkNumberFieldInheritance:t=>"int"!=typeof t,createdComponent(){const t=this;this.domain&&!this.actualConfigData&&this.readAll().then(t=>{this.actualConfigData=t});const e=this.allConfigs[this.selectedSalesChannelId]["NovalnetPayment.settings.clientId"]||this.allConfigs.null["NovalnetPayment.settings.clientId"];null!=e&&""!=e&&this.NovalPaymentApiCredentialsService.validateApiCredentials(e).then(e=>100!=e.serverResponse.status?void 0:void e.tariffResponse.forEach(e=>{null!=this.actualConfigData["NovalnetPayment.settings.tariff"]&&""!=this.actualConfigData["NovalnetPayment.settings.tariff"]||(this.actualConfigData["NovalnetPayment.settings.tariff"]=e.id),t.tariffOptions.push({value:e.id,label:e.name})})).catch(t=>{})}}});var b=n("PWfa"),C=n.n(b);const{Component:P}=Shopware;P.register("noval-payment-configuration",{template:C.a,name:"NovalnetPaymentConfiguration",props:{actualConfigData:{type:Object,required:!0},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{required:!0}},data:()=>({selected:"capture"}),computed:{onholdOptions(){return[{id:"capture",name:this.$tc("noval-payment.settingForm.paymentSettings.onHold.capture")},{id:"authroize",name:this.$tc("noval-payment.settingForm.paymentSettings.onHold.authroize")}]}},methods:{checkTextFieldInheritance:t=>"string"!=typeof t||t.length<=0,checkBoolFieldInheritance:t=>"boolean"!=typeof t}});var S=n("54QO"),k=n("dc8z");const{Module:T}=Shopware;T.register("noval-payment",{type:"plugin",name:"NovalnetPayment",title:"noval-payment.module.title",description:"noval-payment.module.description",version:"1.0.5",targetVersion:"1.0.5",snippets:{"de-DE":S,"en-GB":k},routes:{settings:{component:"noval-payment-settings",path:"settings",meta:{parentPath:"sw.settings.index"}}}});const N=Shopware.Classes.ApiService;var I=class extends N{constructor(t,e,n="noval-payment"){super(t,e,n)}validateApiCredentials(t){const e=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/validate-api-credentials`,{params:{clientId:t},headers:e}).then(t=>N.handleResponse(t))}};const{Application:x}=Shopware;x.addServiceProvider("NovalPaymentApiCredentialsService",t=>{const e=x.getContainer("init");return new I(e.httpClient,t.loginService)})},GL6C:function(t,e){t.exports='{% block sw_order_detail_delivery_metadata %}\n    {% parent %}\n    <template v-if="!isLoading" :isLoading="isLoading">\n        <template v-if="isNovalnetPayment">\n            <sw-card class="sw-order-novalnet-card" :title="$tc(\'noval-payment.module.title\')">                \n                    <sw-container columns="1fr 1fr">\n                        <sw-container>\n\t\t\t\t\t\t\t<sw-description-list>\n\t\t\t\t\t\t\t\t<dt>{{ $tc(\'noval-payment.module.comments\') }}:</dt>\n\t\t\t\t\t\t\t\t\t<dd class="sw-order-base__label-sales-channel">\n\t\t\t\t\t\t\t\t\t\t<span v-html="novalnetComments">\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</dd>\n                            </sw-description-list>\n                        </sw-container>\n                    </sw-container>                \n            </sw-card>\n        </template>\n    </template>\n{% endblock %}\n'},LkXS:function(t,e,n){},NeA9:function(t,e){t.exports='{% block sw_settings_content_card_slot_plugins %}\n    {% parent %}\n\n    <sw-settings-item :label="$tc(\'noval-payment.module.title\')"\n                      :to="{ name: \'noval.payment.settings\' }"\n                      :backgroundEnabled="false">\n        <template #icon>\n            <img class="sw-settings-index__novalnet-icon" :src="\'novalnetpayment/administration/plugin.png\' | asset">\n        </template>\n    </sw-settings-item>\n{% endblock %}\n'},PWfa:function(t,e){t.exports='{% block noval_payment_content_card_channel_config_payment %}\n<sw-card-view style="position: relative;">\n    <sw-card class="sw-card--grid"\n             :title="$tc(\'noval-payment.settingForm.paymentSettings.creditcard.cardTitle\')">\n             \n        {% block noval_payment_content_card_channel_config_payment_card_container %}\n\t\t\t<sw-container>\n\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_container_settings %}\n\t\t\t\t\t<div v-if="actualConfigData" class="noval_payment-settings-credentials">\n\t\t\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_container_settings_creditcard %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.creditcard.testMode\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.creditcard.testMode\']"\n                                                >\n                                <template #content="props">\n                                    <sw-switch-field name="NovalnetPayment.settings.creditcard.testMode"\n\t\t\t\t\t\t\t\t\t\t\t\t\t bordered\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.paymentSettings.testmode.label\')"\n                                                   :helpText="$tc(\'noval-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.creditcard.cc3D\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.creditcard.cc3D\']"\n                                                >\n                                <template #content="props">\n                                    <sw-switch-field name="NovalnetPayment.settings.creditcard.cc3D"\n\t\t\t\t\t\t\t\t\t\t\t\t\t bordered\n\t\t\t\t\t\t\t\t\t\t\t\t\t :mapInheritance="props" :label="$tc(\'noval-payment.settingForm.paymentSettings.creditcard.cc3D.label\')" :helpText="$tc(\'noval-payment.settingForm.paymentSettings.creditcard.cc3D.tooltipText\')"\n\t\t\t\t\t\t\t\t\t\t\t\t\t :value="props.currentValue"\n\t\t\t\t\t\t\t\t\t\t\t\t\t @change="props.updateCurrentValue">\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.creditcard.forcecc3D\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.creditcard.forcecc3D\']"\n                                                >\n                                <template #content="props">\n                                    <sw-switch-field name="NovalnetPayment.settings.creditcard.forcecc3D"\n\t\t\t\t\t\t\t\t\t\t\t\t\t bordered\n\t\t\t\t\t\t\t\t\t\t\t\t\t :mapInheritance="props" :label="$tc(\'noval-payment.settingForm.paymentSettings.creditcard.forcecc3D.label\')" :helpText="$tc(\'noval-payment.settingForm.paymentSettings.creditcard.forcecc3D.tooltipText\')"\n\t\t\t\t\t\t\t\t\t\t\t\t\t :value="props.currentValue"\n\t\t\t\t\t\t\t\t\t\t\t\t\t @change="props.updateCurrentValue">\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.creditcard.onHold\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.creditcard.onHold\']"\n\t\t\t\t\t\t\t\t\t\t\t\t:label="$tc(\'noval-payment.settingForm.paymentSettings.onHold.label\')">\n                                <template #content="props">\n                                    <sw-single-select name="NovalnetPayment.settings.creditcard.onHold"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  labelProperty="name"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  valueProperty="id"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  :options="onholdOptions"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  :isInherited="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  :value="props.currentValue == null ? selected : props.currentValue"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  @change="props.updateCurrentValue">\n\t\t\t\t\t\t\t\t\t</sw-single-select>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.creditcard.onHoldAmount\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.creditcard.onHoldAmount\']"\n                                               >\n                                <template #content="props">\n                                    <sw-number-field name="NovalnetPayment.settings.creditcard.onHoldAmount"\n                                                     :mapInheritance="props"\n                                                     numberType="int"\n                                                     :label="$tc(\'noval-payment.settingForm.paymentSettings.onHold.amountLabel\')"\n                                                     :helpText="$tc(\'noval-payment.settingForm.paymentSettings.onHold.tooltipText\')"\n                                                     :value="props.currentValue == 0 ? null : props.currentValue"\n                                                     @change="props.updateCurrentValue">\n                                    </sw-number-field>\n                                </template>\n                            </sw-inherit-wrapper>\n\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t</div>\n\t\t\t\t{% endblock %}\n\t\t\t</sw-container>\n        {% endblock %}\n        \n    </sw-card>\n    \n    \n    <sw-card class="sw-card--grid"\n             :title="$tc(\'noval-payment.settingForm.paymentSettings.creditcard.css.cardTitle\')">\n             \n        {% block noval_payment_content_card_channel_config_payment_card_css_container %}\n\t\t\t<sw-container>\n\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_css_container_settings %}\n\t\t\t\t\t<div v-if="actualConfigData" class="noval_payment-settings-credentials">\n\t\t\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_container_settings_creditcard_css %}\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.creditcard.label\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.creditcard.label\']">\n                                <template #content="props">\n                                    <sw-text-field name="NovalnetPayment.settings.creditcard.label"\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.paymentSettings.creditcard.css.label\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.creditcard.input\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.creditcard.input\']">\n                                <template #content="props">\n                                    <sw-text-field name="NovalnetPayment.settings.creditcard.input"\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.paymentSettings.creditcard.css.input\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.creditcard.css\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.creditcard.css\']">\n                                <template #content="props">\n                                    <sw-text-field name="NovalnetPayment.settings.creditcard.css"\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.paymentSettings.creditcard.css.css\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t</div>\n\t\t\t\t{% endblock %}\n\t\t\t</sw-container>\n        {% endblock %}\n        \n    </sw-card>\n    \n    <sw-card class="sw-card--grid"\n             :title="$tc(\'noval-payment.settingForm.paymentSettings.sepa.cardTitle\')">\n             \n        {% block noval_payment_content_card_channel_config_payment_card_sepa_container %}\n\t\t\t<sw-container>\n\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_sepa_container_settings %}\n\t\t\t\t\t<div v-if="actualConfigData" class="noval_payment-settings-credentials">\n\t\t\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_container_settings_sepa %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.sepa.testMode\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepa.testMode\']"\n                                                >\n                                <template #content="props">\n                                    <sw-switch-field name="NovalnetPayment.settings.sepa.testMode"\n\t\t\t\t\t\t\t\t\t\t\t\t\t bordered\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.paymentSettings.testmode.label\')"\n                                                   :helpText="$tc(\'noval-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.sepa.dueDate\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepa.dueDate\']"\n                                                >\n                                <template #content="props">\n                                    <sw-number-field name="NovalnetPayment.settings.sepa.dueDate"\n                                                     numberType="int"\n                                                     :mapInheritance="props"\n                                                     :label="$tc(\'noval-payment.settingForm.paymentSettings.sepa.dueDate.label\')"\n                                                     :helpText="$tc(\'noval-payment.settingForm.paymentSettings.sepa.dueDate.tooltipText\')"\n                                                     :value="props.currentValue == 0 ? null : props.currentValue"\n                                                     @change="props.updateCurrentValue">\n                                    </sw-number-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.sepa.onHold\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepa.onHold\']"\n\t\t\t\t\t\t\t\t\t\t\t\t:label="$tc(\'noval-payment.settingForm.paymentSettings.onHold.label\')">\n                                <template #content="props">\n                                    <sw-single-select name="NovalnetPayment.settings.sepa.onHold"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  labelProperty="name"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  valueProperty="id"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  :options="onholdOptions"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  :isInherited="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  :value="props.currentValue == null ? selected : props.currentValue"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  @change="props.updateCurrentValue">\n\t\t\t\t\t\t\t\t\t</sw-single-select>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.sepa.onHoldAmount\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepa.onHoldAmount\']"\n                                                >\n                                <template #content="props">\n                                    <sw-number-field name="NovalnetPayment.settings.sepa.onHoldAmount"\n\t\t\t\t\t\t\t\t\t\t\t\t\t numberType="int"\n                                                     :mapInheritance="props"\n                                                     :label="$tc(\'noval-payment.settingForm.paymentSettings.onHold.amountLabel\')"\n                                                     :helpText="$tc(\'noval-payment.settingForm.paymentSettings.onHold.tooltipText\')"\n                                                     :value="props.currentValue == 0 ? null : props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-number-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.sepa.guarantee\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepa.guarantee\']"\n                                                >\n                                <template #content="props">\n                                    <sw-switch-field name="NovalnetPayment.settings.sepa.guarantee"\n\t\t\t\t\t\t\t\t\t\t\t\t\t bordered\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.paymentSettings.guarantee.label\')"\n                                                   :helpText="$tc(\'noval-payment.settingForm.paymentSettings.guarantee.tooltipText\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.sepa.guaranteeMinimumOrderAmount\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepa.guaranteeMinimumOrderAmount\']"\n                                                >\n                                <template #content="props">\n                                    <sw-text-field name="NovalnetPayment.settings.sepa.guaranteeMinimumOrderAmount"\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.label\')"\n                                                   :helpText="$tc(\'noval-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.tooltipText\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.sepa.forceGuarantee\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepa.forceGuarantee\']"\n                                                >\n                                <template #content="props">\n                                    <sw-switch-field name="NovalnetPayment.settings.sepa.forceGuarantee"\n\t\t\t\t\t\t\t\t\t\t\t\t\t bordered\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.paymentSettings.forceGuarantee.label\')"\n                                                   :helpText="$tc(\'noval-payment.settingForm.paymentSettings.forceGuarantee.tooltipText\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t</div>\n\t\t\t\t{% endblock %}\n\t\t\t</sw-container>\n        {% endblock %}    \n    </sw-card>\n    \n    <sw-card class="sw-card--grid"\n             :title="$tc(\'noval-payment.settingForm.paymentSettings.paypal.cardTitle\')">\n        {% block noval_payment_content_card_channel_config_payment_card_paypal_container %}\n\t\t\t<sw-container>\n\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_paypal_container_settings %}\n\t\t\t\t\t<div v-if="actualConfigData" class="noval_payment-settings-credentials">\n\t\t\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_container_settings_paypal %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.paypal.testMode\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.paypal.testMode\']"\n                                                >\n                                <template #content="props">\n                                    <sw-switch-field name="NovalnetPayment.settings.paypal.testMode"\n\t\t\t\t\t\t\t\t\t\t\t\t\t bordered\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.paymentSettings.testmode.label\')"\n                                                   :helpText="$tc(\'noval-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.paypal.onHold\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.paypal.onHold\']"\n\t\t\t\t\t\t\t\t\t\t\t\t:label="$tc(\'noval-payment.settingForm.paymentSettings.onHold.label\')">\n                                <template #content="props">\n                                    <sw-single-select name="NovalnetPayment.settings.paypal.onHold"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  labelProperty="name"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  valueProperty="id"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  :options="onholdOptions"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  :isInherited="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  :value="props.currentValue == null ? selected : props.currentValue"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  @change="props.updateCurrentValue">\n\t\t\t\t\t\t\t\t\t</sw-single-select>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.paypal.onHoldAmount\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.paypal.onHoldAmount\']"\n                                                >\n                                <template #content="props">\n                                    <sw-number-field name="NovalnetPayment.settings.paypal.onHoldAmount"\n\t\t\t\t\t\t\t\t\t\t\t\t\t numberType="int"\n                                                     :mapInheritance="props"\n                                                     :label="$tc(\'noval-payment.settingForm.paymentSettings.onHold.amountLabel\')"\n                                                     :helpText="$tc(\'noval-payment.settingForm.paymentSettings.onHold.tooltipText\')"\n                                                     :value="props.currentValue == 0 ? null : props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-number-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\t\t\t\t\t</div>\n\t\t\t\t{% endblock %}\n\t\t\t</sw-container>\n        {% endblock %}    \n    </sw-card>\n    \n    <sw-card class="sw-card--grid"\n             :title="$tc(\'noval-payment.settingForm.paymentSettings.sofort.cardTitle\')">\n        {% block noval_payment_content_card_channel_config_payment_card_sofort_container %}\n\t\t\t<sw-container>\n\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_sofort_container_settings %}\n\t\t\t\t\t<div v-if="actualConfigData" class="noval_payment-settings-credentials">\n\t\t\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_container_settings_sofort %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.sofort.testMode\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sofort.testMode\']"\n                                                >\n                                <template #content="props">\n                                    <sw-switch-field name="NovalnetPayment.settings.sofort.testMode"\n\t\t\t\t\t\t\t\t\t\t\t\t\t bordered\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.paymentSettings.testmode.label\')"\n                                                   :helpText="$tc(\'noval-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\t\t\t\t\t</div>\n\t\t\t\t{% endblock %}\n\t\t\t</sw-container>\n        {% endblock %}    \n    </sw-card>\n    \n    <sw-card class="sw-card--grid"\n             :title="$tc(\'noval-payment.settingForm.paymentSettings.ideal.cardTitle\')">\n        {% block noval_payment_content_card_channel_config_payment_card_ideal_container %}\n\t\t\t<sw-container>\n\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_ideal_container_settings %}\n\t\t\t\t\t<div v-if="actualConfigData" class="noval_payment-settings-credentials">\n\t\t\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_container_settings_ideal %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.ideal.testMode\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.ideal.testMode\']"\n                                                >\n                                <template #content="props">\n                                    <sw-switch-field name="NovalnetPayment.settings.ideal.testMode"\n\t\t\t\t\t\t\t\t\t\t\t\t\t bordered\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.paymentSettings.testmode.label\')"\n                                                   :helpText="$tc(\'noval-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\t\t\t\t\t</div>\n\t\t\t\t{% endblock %}\n\t\t\t</sw-container>\n        {% endblock %}    \n    </sw-card>\n    \n    <sw-card class="sw-card--grid"\n             :title="$tc(\'noval-payment.settingForm.paymentSettings.eps.cardTitle\')">\n        {% block noval_payment_content_card_channel_config_payment_card_eps_container %}\n\t\t\t<sw-container>\n\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_eps_container_settings %}\n\t\t\t\t\t<div v-if="actualConfigData" class="noval_payment-settings-credentials">\n\t\t\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_container_settings_eps %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.eps.testMode\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.eps.testMode\']"\n                                                >\n                                <template #content="props">\n                                    <sw-switch-field name="NovalnetPayment.settings.eps.testMode"\n\t\t\t\t\t\t\t\t\t\t\t\t\t bordered\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.paymentSettings.testmode.label\')"\n                                                   :helpText="$tc(\'noval-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\t\t\t\t\t</div>\n\t\t\t\t{% endblock %}\n\t\t\t</sw-container>\n        {% endblock %}    \n    </sw-card>\n    \n    <sw-card class="sw-card--grid"\n             :title="$tc(\'noval-payment.settingForm.paymentSettings.giropay.cardTitle\')">\n        {% block noval_payment_content_card_channel_config_payment_card_giropay_container %}\n\t\t\t<sw-container>\n\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_giropay_container_settings %}\n\t\t\t\t\t<div v-if="actualConfigData" class="noval_payment-settings-credentials">\n\t\t\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_container_settings_giropay %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.giropay.testMode\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.giropay.testMode\']"\n                                                >\n                                <template #content="props">\n                                    <sw-switch-field name="NovalnetPayment.settings.giropay.testMode"\n\t\t\t\t\t\t\t\t\t\t\t\t\t bordered\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.paymentSettings.testmode.label\')"\n                                                   :helpText="$tc(\'noval-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\t\t\t\t\t</div>\n\t\t\t\t{% endblock %}\n\t\t\t</sw-container>\n        {% endblock %}    \n    </sw-card>\n    \n    <sw-card class="sw-card--grid"\n             :title="$tc(\'noval-payment.settingForm.paymentSettings.cashpayment.cardTitle\')">\n        {% block noval_payment_content_card_channel_config_payment_card_cashpayment_container %}\n\t\t\t<sw-container>\n\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_cashpayment_container_settings %}\n\t\t\t\t\t<div v-if="actualConfigData" class="noval_payment-settings-credentials">\n\t\t\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_container_settings_cashpayment %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.cashpayment.testMode\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.cashpayment.testMode\']"\n                                                >\n                                <template #content="props">\n                                    <sw-switch-field name="NovalnetPayment.settings.cashpayment.testMode"\n\t\t\t\t\t\t\t\t\t\t\t\t\t bordered\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.paymentSettings.testmode.label\')"\n                                                   :helpText="$tc(\'noval-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.cashpayment.dueDate\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.cashpayment.dueDate\']"\n                                                >\n                                <template #content="props">\n                                    <sw-number-field name="NovalnetPayment.settings.cashpayment.dueDate"\n                                                     numberType="int"\n                                                     :mapInheritance="props"\n                                                     :label="$tc(\'noval-payment.settingForm.paymentSettings.cashpayment.dueDate.label\')"\n                                                     :helpText="$tc(\'noval-payment.settingForm.paymentSettings.cashpayment.dueDate.tooltipText\')"\n                                                     :value="props.currentValue == 0 ? null : props.currentValue"\n                                                     @change="props.updateCurrentValue">\n                                    </sw-number-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\t\t\t\t\t</div>\n\t\t\t\t{% endblock %}\n\t\t\t</sw-container>\n        {% endblock %}    \n    </sw-card>\n    \n    <sw-card class="sw-card--grid"\n             :title="$tc(\'noval-payment.settingForm.paymentSettings.invoice.cardTitle\')">\n        {% block noval_payment_content_card_channel_config_payment_card_invoice_container %}\n\t\t\t<sw-container>\n\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_invoice_container_settings %}\n\t\t\t\t\t<div v-if="actualConfigData" class="noval_payment-settings-credentials">\n\t\t\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_container_settings_invoice %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.invoice.testMode\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.invoice.testMode\']"\n                                                >\n                                <template #content="props">\n                                    <sw-switch-field name="NovalnetPayment.settings.invoice.testMode"\n\t\t\t\t\t\t\t\t\t\t\t\t\t bordered\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.paymentSettings.testmode.label\')"\n                                                   :helpText="$tc(\'noval-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.invoice.dueDate\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.invoice.dueDate\']"\n                                                >\n                                <template #content="props">\n                                    <sw-number-field name="NovalnetPayment.settings.invoice.dueDate"\n                                                     numberType="int"\n                                                     :mapInheritance="props"\n                                                     :label="$tc(\'noval-payment.settingForm.paymentSettings.invoice.dueDate.label\')"\n                                                     :helpText="$tc(\'noval-payment.settingForm.paymentSettings.invoice.dueDate.tooltipText\')"\n                                                     :value="props.currentValue == 0 ? null : props.currentValue"\n                                                     @change="props.updateCurrentValue">\n                                    </sw-number-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.invoice.onHold\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.invoice.onHold\']"\n\t\t\t\t\t\t\t\t\t\t\t\t:label="$tc(\'noval-payment.settingForm.paymentSettings.onHold.label\')">\n                                <template #content="props">\n                                    <sw-single-select name="NovalnetPayment.settings.invoice.onHold"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  labelProperty="name"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  valueProperty="id"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  :options="onholdOptions"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  :isInherited="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  :value="props.currentValue == null ? selected : props.currentValue"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  @change="props.updateCurrentValue">\n\t\t\t\t\t\t\t\t\t</sw-single-select>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.invoice.onHoldAmount\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.invoice.onHoldAmount\']"\n                                               >\n                                <template #content="props">\n                                    <sw-number-field name="NovalnetPayment.settings.invoice.onHoldAmount"\n\t\t\t\t\t\t\t\t\t\t\t\t\t numberType="int"\n                                                     :mapInheritance="props"\n                                                     :label="$tc(\'noval-payment.settingForm.paymentSettings.onHold.amountLabel\')"\n                                                     :helpText="$tc(\'noval-payment.settingForm.paymentSettings.onHold.tooltipText\')"\n                                                     :value="props.currentValue == 0 ? null : props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-number-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.invoice.guarantee\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.invoice.guarantee\']"\n                                                >\n                                <template #content="props">\n                                    <sw-switch-field name="NovalnetPayment.settings.invoice.guarantee"\n\t\t\t\t\t\t\t\t\t\t\t\t\t bordered\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.paymentSettings.guarantee.label\')"\n                                                   :helpText="$tc(\'noval-payment.settingForm.paymentSettings.guarantee.tooltipText\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.invoice.guaranteeMinimumOrderAmount\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.invoice.guaranteeMinimumOrderAmount\']"\n                                                >\n                                <template #content="props">\n                                    <sw-text-field name="NovalnetPayment.settings.invoice.guaranteeMinimumOrderAmount"\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.label\')"\n                                                   :helpText="$tc(\'noval-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.tooltipText\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.invoice.forceGuarantee\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.invoice.forceGuarantee\']"\n                                                >\n                                <template #content="props">\n                                    <sw-switch-field name="NovalnetPayment.settings.invoice.forceGuarantee"\n\t\t\t\t\t\t\t\t\t\t\t\t\t bordered\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.paymentSettings.forceGuarantee.label\')"\n                                                   :helpText="$tc(\'noval-payment.settingForm.paymentSettings.forceGuarantee.tooltipText\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\t\t\t\t\t</div>\n\t\t\t\t{% endblock %}\n\t\t\t</sw-container>\n        {% endblock %}    \n    </sw-card>\n    \n    <sw-card class="sw-card--grid"\n             :title="$tc(\'noval-payment.settingForm.paymentSettings.prepayment.cardTitle\')">\n        {% block noval_payment_content_card_channel_config_payment_card_prepayment_container %}\n\t\t\t<sw-container>\n\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_prepayment_container_settings %}\n\t\t\t\t\t<div v-if="actualConfigData" class="noval_payment-settings-credentials">\n\t\t\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_container_settings_prepayment %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.prepayment.testMode\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.prepayment.testMode\']"\n                                                >\n                                <template #content="props">\n                                    <sw-switch-field name="NovalnetPayment.settings.prepayment.testMode"\n\t\t\t\t\t\t\t\t\t\t\t\t\t bordered\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.paymentSettings.testmode.label\')"\n                                                   :helpText="$tc(\'noval-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\t\t\t\t\t</div>\n\t\t\t\t{% endblock %}\n\t\t\t</sw-container>\n        {% endblock %}    \n    </sw-card>\n    \n    <sw-card class="sw-card--grid"\n             :title="$tc(\'noval-payment.settingForm.paymentSettings.przelewy24.cardTitle\')">\n        {% block noval_payment_content_card_channel_config_payment_card_przelewy24_container %}\n\t\t\t<sw-container>\n\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_przelewy24_container_settings %}\n\t\t\t\t\t<div v-if="actualConfigData" class="noval_payment-settings-credentials">\n\t\t\t\t\t\t{% block noval_payment_content_card_channel_config_payment_card_container_settings_przelewy24 %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.przelewy24.testMode\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.przelewy24.testMode\']"\n                                                >\n                                <template #content="props">\n                                    <sw-switch-field name="NovalnetPayment.settings.przelewy24.testMode"\n\t\t\t\t\t\t\t\t\t\t\t\t\t bordered\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.paymentSettings.testmode.label\')"\n                                                   :helpText="$tc(\'noval-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\t\t\t\t\t</div>\n\t\t\t\t{% endblock %}\n\t\t\t</sw-container>\n        {% endblock %}    \n    </sw-card>\n    \n</sw-card-view>\n{% endblock %}\n'},PvHz:function(t,e){t.exports='{% block noval_payment_settings %}\n    <sw-page class="noval-payment">\n        {% block noval_payment_settings_header %}\n            <template slot="smart-bar-header">\n                <h2>\n                    {{ $tc(\'sw-settings.index.title\') }}\n                    <sw-icon name="small-arrow-medium-right" small></sw-icon>\n                    {{ $tc(\'noval-payment.settingForm.title\') }}\n                </h2>\n            </template>\n        {% endblock %}\n        \n        {% block noval_payment_settings_actions %}\n            <template #smart-bar-actions>\n\t\t\t\t\n\t\t\t\t{% block noval_payment_actions_validate %}\n                    <sw-button-process @click="onValidate"\n\t\t\t\t\t\t\t\t\t   v-model="isValidateSuccessful"\n\t\t\t\t\t\t\t\t\t   :isLoading="isValidating"\n                                       :disabled="validateButtonDisabled">\n                        {{ $tc(\'noval-payment.settingForm.buttons.validate\') }}\n                    </sw-button-process>\n                {% endblock %}\n\t\t\t\t\n\t\t\t\t{% block noval_payment_actions_save %}\n                    <sw-button-process v-model="isSaveSuccessful"\n                                       class="sw-settings-login-registration__save-action"\n                                       variant="primary"\n                                       :isLoading="isLoading"\n                                       :disabled="isLoading"\n                                       @click="onSave">\n                        {{ $tc(\'noval-payment.settingForm.buttons.save\') }}\n                    </sw-button-process>\n                {% endblock %}\n            \n            </template>\n        {% endblock %}\n        \n        {% block noval_payment_content %}\n\t\t\t\n\t\t\t<template #content>\n\t\t\t\t{% block noval_payment_content_card %}\n\t\t\t\t\t<sw-card-view>\n\t\t\t\t\t\n\t\t\t\t\t\t{% block noval_payment_content_sales_channel_config %}\n\t\t\t\t\t\t\t<sw-sales-channel-config v-model="config"\n\t\t\t\t\t\t\t\t\t\t\t\t\t ref="configComponent"\n\t\t\t\t\t\t\t\t\t\t\t\t\t domain="NovalnetPayment.settings">\n\t\t\t\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t{% block noval_payment_content_sales_channelconfig_card %}\n\t\t\t\t\t\t\t\t  <template #select="{ onInput, selectedSalesChannelId, salesChannel }">\n\t\t\t\t\t\t\t\t\t{% block noval_payment_content_sales_channelconfig_card_sales_channel %}\n\t\t\t\t\t\t\t\t\t  <sw-card title="Sales Channel Switch">\n\t\t\t\t\t\t\t\t\t\t\t{% block noval_payment_content_card_channel_config_card_content %}\n\t\t\t\t\t\t\t\t\t\t\t\t<sw-single-select v-model="selectedSalesChannelId"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  labelProperty="translated.name"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  valueProperty="id"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  :options="salesChannel"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  @change="onInput">\n\t\t\t\t\t\t\t\t\t\t\t\t</sw-single-select>\n\t\t\t\t\t\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t\t\t\t\t  </sw-card>\n\t\t\t\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t\t\t\t  </template>\n\t\t\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{% block noval_payment_config_content_channel_config_cards %}\n\t\t\t\t\t\t\t\t\t<template #content="{ actualConfigData, allConfigs, selectedSalesChannelId }">\n                                        <div v-if="actualConfigData">\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t{% block noval_payment_content_card_channel_config_credentials_card %}\n                                                <noval-payment-credentials :actualConfigData="actualConfigData"\n                                                                       :allConfigs="allConfigs"\n                                                                       :selectedSalesChannelId="selectedSalesChannelId">\n                                                </noval-payment-credentials>\n                                            {% endblock %}\n                                            \n                                            {% block noval_payment_content_card_channel_config_payment_card %}\n                                                <noval-payment-configuration :actualConfigData="actualConfigData"\n                                                                       :allConfigs="allConfigs"\n                                                                       :selectedSalesChannelId="selectedSalesChannelId">\n                                                </noval-payment-configuration>\n                                            {% endblock %}\n                                            \n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t</sw-sales-channel-config>\n\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t\t\n\t\t\t\t\t\t{% block noval_payment_content_card_loading %}\n                            <sw-loader v-if="isLoading"></sw-loader>\n                        {% endblock %}\n                        \t\n\t\t\t\t\t</sw-card-view>\n\t\t\t\t{% endblock %}\n\t\t\t</template>\n        {% endblock %}   \n    </sw-page>\n{% endblock %}\n'},XhVM:function(t,e,n){var a=n("LkXS");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,n("SZ7m").default)("24a5cad2",a,!0,{})},dc8z:function(t){t.exports=JSON.parse('{"noval-payment":{"module":{"title":"Novalnet","description":"PCI compliant and seamless integration with various payment types and payment processing services in one unique platform...","txid":"Novalnet Transaction ID","comments":"Novalnet Comments"},"settingForm":{"title":"Novalnet Settings","buttons":{"save":"Save settings","validate":"Validate API credentials"},"credentials":{"cardTitle":"Novalnet Global Configuration","activationKey":{"label":"Product activation key","tooltipText":"Enter Novalnet Product activation key. To get the Product Activation Key, go to Novalnet admin portal - PROJECTS: Project Information - Shop Parameters: API Signature (Product activation key)."},"vendorId":"Merchant ID","authCode":"Authentication code","productId":"Project ID","accessKey":"Payment access key","tariff":{"label":"Tariff ID","tooltipText":"Select Novalnet tariff ID","emptyText":"Select Tariff ID"},"gatewayTimeout":{"label":"Gateway timeout (in seconds)","tooltipText":"In case the order processing time exceeds the gateway timeout, the order will not be placed"},"paymentLogo":{"label":"Display payment method logo","tooltipText":"The payment method logo will be displayed on the checkout page"}},"merchantSettings":{"cardTitle":"Merchant script management","callbackMail":"Enable E-mail notification for callback","deactivateIp":{"label":"Deactivate IP address control (for test purpose only)","tooltipText":"This option will allow performing a manual execution. Please disable this option before setting your shop to LIVE mode, to avoid unauthorized calls from external parties (excl. Novalnet)."},"mailTo":{"label":"E-mail address (To)","tooltipText":"E-Mail address of the recipient"},"mailBcc":{"label":"Email address (Bcc)","tooltipText":"E-Mail address of the recipient for BCC"},"callbackUrl":{"label":"Notification URL","tooltipText":"The notification URL is used to keep your database/system actual and synchronizes with the Novalnet transaction status"}},"paymentSettings":{"testmode":{"label":"Enable test mode","tooltipText":"The payment will be processed in the test mode therefore amount for this transaction will not be charged"},"onHold":{"label":"Payment action","capture":"Capture","authroize":"Authorize","amountLabel":"Minimum transaction limit for authorization (in minimum unit of currency. E.g. enter 100 which is equal to 1.00)","tooltipText":"In case the order amount exceeds the mentioned limit, the transaction will be set on-hold till your confirmation of the transaction. You can leave the field empty if you wish to process all the transactions as on-hold."},"guarantee":{"label":"Enable payment guarantee","tooltipText":"Basic requirements for payment guarantee<br /><br />Allowed countries: AT, DE, CH<br />Allowed currency: EUR<br />Minimum amount of order >= 9,99 EUR<br />Minimum age of end customer >= 18 Years <br />The billing address must be the same as the shipping address<br />Gift certificates/vouchers are not allowed"},"guaranteeMinimumOrderAmount":{"label":"Minimum order amount (in minimum unit of currency. E.g. enter 100 which is equal to 1.00)","tooltipText":"This setting will override the default setting made in the minimum order amount. Note: Minimum amount should be greater than or equal to 9,99 EUR."},"forceGuarantee":{"label":"Force Non-Guarantee payment","tooltipText":"If the payment guarantee is activated (True), but the above mentioned requirements are not met, the payment should be processed as non-guarantee payment."},"creditcard":{"cardTitle":"Credit Card Configuration","cc3D":{"label":"Enable 3D secure","tooltipText":"The 3D-Secure will be activated for credit cards. The issuing bank prompts the buyer for a password what, in turn, help to prevent a fraudulent payment. It can be used by the issuing bank as evidence that the buyer is indeed their card holder. This is intended to help decrease a risk of charge-back"},"forcecc3D":{"label":"Force 3D secure on predefined conditions","tooltipText":"If 3D secure is not enabled in the above field, then force 3D secure process as per the \'Enforced 3D secure (as per predefined filters & settings)\' module configuration at the Novalnet admin portal. If the predefined filters & settings from Enforced 3D secure module are met, then the transaction will be processed as 3D secure transaction otherwise it will be processed as non 3D secure. Please note that the \'Enforced 3D secure (as per predefined filters & settings)\' module should be configured at Novalnet admin portal prior to the activation here. For further information, please refer the description of this fraud module at \'Fraud Modules\' tab, below \'Projects\' menu, under the selected project in Novalnet admin portal or contact Novalnet support team."},"css":{"cardTitle":"CSS settings for Credit Card iframe","label":"Label","input":"Input","css":"CSS Text"}},"sepa":{"cardTitle":"SEPA Configuration","dueDate":{"label":"SEPA payment duration (in days)","tooltipText":"Enter the number of days after which the payment should be processed (must be between 2 and 14 days)","error":"SEPA Due date is not valid"}},"paypal":{"cardTitle":"PayPal Configuration"},"sofort":{"cardTitle":"Instant Bank Transfer Configuration"},"ideal":{"cardTitle":"iDEAL Configuration"},"eps":{"cardTitle":"eps Configuration"},"cashpayment":{"cardTitle":"Barzahlen/viacash Configuration","dueDate":{"label":"Slip expiry date (in days)","tooltipText":"Enter the number of days to pay the amount at store near you. If the field is empty, 14 days will be set as default."}},"giropay":{"cardTitle":"Giropay Configuration"},"invoice":{"cardTitle":"Invoice Configuration","dueDate":{"label":"Payment due date (in days)","tooltipText":"Enter the number of days to transfer the payment amount to Novalnet (must be greater than 7 days). In case if the field is empty, 14 days will be set as due date by default"}},"prepayment":{"cardTitle":"Prepayment Configuration"},"przelewy24":{"cardTitle":"Przelewy24 Configuration"}},"behaviour":{"cardTitle":"Behaviour","merchantLocation":{"label":"Merchant location","germany":"Germany","other":"Other merchant location"},"intent":{"label":"Payment acquisition","sale":"Complete payment immediately (Sale)","authorize":"Delayed payment collection (Auth-Capture)","order":"Delayed payment collection (Order-Auth-Capture)"},"submitCart":{"label":"Submit cart","helpText":"If this option is active, cart data will be submitted to PayPal at checkout."},"brandName":{"label":"Your own brand name on PayPal page","tooltipText":"This text will be displayed as the brand name on the PayPal payment page."},"landingPage":{"label":"PayPal landing page","helpText":{"Login":"Login: The PayPal site displays a login screen as landing page.","Billing":"Registration: The PayPal site displays a registration form as landing page."},"options":{"Login":"Login","Billing":"Registration"}},"sendOrderNumber":{"label":"Submit order number","helpText":"If this option is active, the order number will be submitted to PayPal at checkout."},"orderNumberPrefix":{"label":"Order number prefix","tooltipText":"This text is placed before the original order number (e.g MyShop_SW20001). This helps to identify the shop where the payment was made."}},"titleSuccess":"Success","titleError":"Error","successMessage":"Novalnet merchant details are configured successfully.","errorMessage":"There was an error and your request could not be completed","emptyMessage":"Enter Product activation key"}}}')},oSCH:function(t,e,n){},qAyE:function(t,e){t.exports='{% block noval_payment_content_card_channel_config_credentials %}\n<sw-card-view style="position: relative;">\n    <sw-card class="sw-card--grid"\n             :title="$tc(\'noval-payment.settingForm.credentials.cardTitle\')">\n\n        {% block noval_payment_content_card_channel_config_credentials_card_container %}\n            <sw-container>\n\n                {% block noval_payment_content_card_channel_config_credentials_card_container_settings %}\n                    <div v-if="actualConfigData" class="noval_payment-settings-credentials">\n\n                        {% block noval_payment_content_card_channel_config_credentials_card_container_settings_client_id %}\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.clientId\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.clientId\']"\n                                                :customInheritationCheckFunction="checkTextFieldInheritance">\n                                <template #content="props">\n                                    <sw-text-field name="NovalnetPayment.settings.clientId"\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.credentials.activationKey.label\')"\n                                                   :helpText="$tc(\'noval-payment.settingForm.credentials.activationKey.tooltipText\')"\n                                                   :disabled="props.isInherited"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\n                        {% block noval_payment_content_card_channel_config_credentials_card_container_settings_client_secret %}\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.vendorId\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.vendorId\']"\n                                                :customInheritationCheckFunction="checkTextFieldInheritance">\n                                <template #content="props">\n                                    <sw-text-field name="NovalnetPayment.settings.vendorId"\n\t\t\t\t\t\t\t\t\t\t\t\t   :label="$tc(\'noval-payment.settingForm.credentials.vendorId\')"\n                                                   :mapInheritance="props"\n                                                   :disabled="shouldDisable"\n                                                   :value="props.currentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.authCode\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.authCode\']"\n                                                :customInheritationCheckFunction="checkTextFieldInheritance">\n                                <template #content="props">\n                                    <sw-text-field name="NovalnetPayment.settings.authCode"\n\t\t\t\t\t\t\t\t\t\t\t\t   :label="$tc(\'noval-payment.settingForm.credentials.authCode\')"\n                                                   :mapInheritance="props"\n                                                   :disabled="shouldDisable"\n                                                   :value="props.currentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.productId\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.productId\']"\n                                                :customInheritationCheckFunction="checkTextFieldInheritance">\n                                <template #content="props">\n                                    <sw-text-field name="NovalnetPayment.settings.productId"\n\t\t\t\t\t\t\t\t\t\t\t\t   :label="$tc(\'noval-payment.settingForm.credentials.productId\')"\t\n                                                   :mapInheritance="props"\n                                                   :disabled="shouldDisable"\n                                                   :value="props.currentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.tariff\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.tariff\']"\n                                                >\n                                <template #content="props">\n                                    <sw-single-select name="NovalnetPayment.settings.tariff"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  :options="tariffOptions"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  :label="$tc(\'noval-payment.settingForm.credentials.tariff.label\')"\n                                                      :helpText="$tc(\'noval-payment.settingForm.credentials.tariff.tooltipText\')"\n                                                      :disabled="props.isInherited"\n                                                      :value="props.currentValue"\n                                                      @change="props.updateCurrentValue"\n                                                      >\n                                    </sw-single-select>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.accessKey\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.accessKey\']"\n                                                :customInheritationCheckFunction="checkTextFieldInheritance">\n                                <template #content="props">\n                                    <sw-text-field name="NovalnetPayment.settings.accessKey"\n\t\t\t\t\t\t\t\t\t\t\t\t   :label="$tc(\'noval-payment.settingForm.credentials.accessKey\')"\t\n                                                   :mapInheritance="props"\n                                                   :disabled="shouldDisable"\n                                                   :value="props.currentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.gatewayTimeout\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.gatewayTimeout\']"\n                                                >\n                                <template #content="props">\n                                    <sw-number-field name="NovalnetPayment.settings.gatewayTimeout"\n\t\t\t\t\t\t\t\t\t\t\t\t\t numberType="float"\n                                                     :mapInheritance="props"\n                                                     :label="$tc(\'noval-payment.settingForm.credentials.gatewayTimeout.label\')"\n                                                     :helpText="$tc(\'noval-payment.settingForm.credentials.gatewayTimeout.tooltipText\')"  \n                                                     :value="(props.currentValue == 0 || props.currentValue == null) ? 240 : props.currentValue"\n                                                     @change="props.updateCurrentValue">\n                                    </sw-number-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.paymentLogo\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.paymentLogo\']"\n                                                :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                <template #content="props">\n                                    <sw-switch-field name="NovalnetPayment.settings.paymentLogo"\n\t\t\t\t\t\t\t\t\t\t\t\t\t bordered\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.credentials.paymentLogo.label\')"\n                                                   :helpText="$tc(\'noval-payment.settingForm.credentials.paymentLogo.tooltipText\')"\n                                                   :disabled="props.isInherited"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n            </sw-container>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n{% block noval_payment_content_card_channel_config_merchant_credentials %}\n    <sw-card class="sw-card--grid"\n             :title="$tc(\'noval-payment.settingForm.merchantSettings.cardTitle\')">\n        {% block noval_payment_content_card_channel_config_merchant_credentials_card_container %}\n\t\t\t<sw-container>\n\t\t\t\t{% block noval_payment_content_card_channel_config_merchant_credentials_card_container_settings %}\n\t\t\t\t\t<div v-if="actualConfigData" class="noval_payment-settings-merchant-credentials">\n\t\t\t\t\t\t{% block noval_payment_content_card_channel_config_merchant_credentials_card_container_settings_ip %}\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.deactivateIp\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.deactivateIp\']"\n                                                >\n                                <template #content="props">\n                                    <sw-switch-field name="NovalnetPayment.settings.deactivateIp"\n\t\t\t\t\t\t\t\t\t\t\t\t\t bordered\n\t\t\t\t\t\t\t\t\t\t\t\t\t :mapInheritance="props"\n\t\t\t\t\t\t\t\t\t\t\t\t\t :label="$tc(\'noval-payment.settingForm.merchantSettings.deactivateIp.label\')"\n\t\t\t\t\t\t\t\t\t\t\t\t\t :helpText="$tc(\'noval-payment.settingForm.merchantSettings.deactivateIp.tooltipText\')"\n\t\t\t\t\t\t\t\t\t\t\t\t\t :value="props.currentValue"\n\t\t\t\t\t\t\t\t\t\t\t\t\t @change="props.updateCurrentValue">\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.callbackMail\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.callbackMail\']"\n                                                >\n                                <template #content="props">\n\t\t\t\t\t\t\t\t\t<sw-switch-field name="NovalnetPayment.settings.callbackMail"\n\t\t\t\t\t\t\t\t\t\t\t\t\t bordered\n\t\t\t\t\t\t\t\t\t\t\t\t\t :mapInheritance="props"\n\t\t\t\t\t\t\t\t\t\t\t\t\t :label="$tc(\'noval-payment.settingForm.merchantSettings.callbackMail\')"\n\t\t\t\t\t\t\t\t\t\t\t\t\t :value="props.currentValue"\n\t\t\t\t\t\t\t\t\t\t\t\t\t @change="props.updateCurrentValue">\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.mailTo\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.mailTo\']"\n                                                >\n                                <template #content="props">\n                                    <sw-text-field name="NovalnetPayment.settings.mailTo"\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.merchantSettings.mailTo.label\')"\n                                                   :helpText="$tc(\'noval-payment.settingForm.merchantSettings.mailTo.tooltipText\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.mailBcc\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.mailBcc\']"\n                                                >\n                                <template #content="props">\n                                    <sw-text-field name="NovalnetPayment.settings.mailBcc"\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.merchantSettings.mailBcc.label\')"\n                                                   :helpText="$tc(\'noval-payment.settingForm.merchantSettings.mailBcc.tooltipText\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                            <sw-inherit-wrapper v-model="actualConfigData[\'NovalnetPayment.settings.callbackUrl\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.callbackUrl\']"\n                                                :customInheritationCheckFunction="checkTextFieldInheritance">\n                                <template #content="props">\n                                    <sw-text-field name="NovalnetPayment.settings.callbackUrl"\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'noval-payment.settingForm.merchantSettings.callbackUrl.label\')"\n                                                   :helpText="$tc(\'noval-payment.settingForm.merchantSettings.callbackUrl.tooltipText\')"\n                                                   :value="currentUrl"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\t\t\t\t\t</div>\n\t\t\t\t{% endblock %}\n            </sw-container>\n        {% endblock %} \n    </sw-card>\n</sw-card-view>\n{% endblock %}\n'},xf3Y:function(t,e,n){var a=n("oSCH");"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,n("SZ7m").default)("5a98254e",a,!0,{})}},[["Cb2X","runtime","vendors-node"]]]);